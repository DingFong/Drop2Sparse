
Save dir: ./results/cifar10/conv3in_grad_mse_nd2000_cut_niter2000_factor2_lr0.0005_mom_img0.5_mix_ipc:1_sample_accrange:(70-80)_poolNumber: 5_pruning(0.8)_pruning_type:global_tuneEpoch:0_pretrained:conv3in_cut_dsa_p
Define synthetic data:  torch.Size([10, 3, 32, 32])
Factor: 2 (single)
Mixed initialize synset
  0%|                                                                                                                                                                                | 0/100 [00:00<?, ?it/s]
Augmentataion Matching:  color_crop_cutout
Augmentataion Net update:  color_crop
evaluation for [100, 250, 500, 1000, 1500, 2000] iteration
Start condensing with grad matching for 2000 iteration
pretrained dir: ./pretrained/cifar10/conv3in_cut/5/70_80
model pool: ['./pretrained/cifar10/conv3in_cut/5/70_80/56_checkpoint228.pth.tar', './pretrained/cifar10/conv3in_cut/5/70_80/16_checkpoint171.pth.tar', './pretrained/cifar10/conv3in_cut/5/70_80/18_checkpoint171.pth.tar', './pretrained/cifar10/conv3in_cut/5/70_80/32_checkpoint210.pth.tar', './pretrained/cifar10/conv3in_cut/5/70_80/7_checkpoint299.pth.tar']
convnet, dataset:cifar10, depth = 3, norm_type: instance, nch = 3
load model from ./pretrained/cifar10/conv3in_cut/5/70_80/16_checkpoint171.pth.tar
Pruning Type: global, ratio: 0.8



 34%|████████████████████████████████████████████████████████▊                                                                                                              | 34/100 [00:07<00:15,  4.31it/s]
Traceback (most recent call last):
  File "/home/user/桌面/FredH/Drop2Sparse/condense.py", line 1322, in <module>
    condense(args, logger)
  File "/home/user/桌面/FredH/Drop2Sparse/condense.py", line 1175, in condense
    top1, top5, losses = train_epoch(args,
  File "/home/user/桌面/FredH/Drop2Sparse/train.py", line 258, in train_epoch
    output = model(input)
  File "/home/user/miniconda3/envs/distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/user/桌面/FredH/Drop2Sparse/models/convnet.py", line 47, in forward
    x = self.layers['norm'][d](x)
  File "/home/user/miniconda3/envs/distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1105, in _call_impl
    forward_call = (self._slow_forward if torch._C._get_tracing_state() else self.forward)
KeyboardInterrupt